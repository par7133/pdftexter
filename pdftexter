#!/bin/ksh
# This file is part of pdftexter and is targeting primarly OpenBSD
# System requirements: Ghostscript Tesseract
# Copyright 5 Mode and other contributors; Licensed MIT
echo "This file is part of pdftexter and is targeting primarly OpenBSD"
echo "System requirements: Ghostscript Tesseract"
echo "Copyright Â© 5 Mode and other contributors; Licensed MIT"

param1=$1
param2=$2
param3=$3

if [ ! -e /usr/local/bin/gs ]; then
  echo ""
  echo "System requirement: Ghostscript"
  exit 1
fi

if [ ! -e /usr/local/bin/tesseract ]; then
  echo ""
  echo "System requirement: Tesseract"
  exit 1
fi


if [ "$param1" = "-h" ]; then
  echo ""
  echo "Usage: pdftexter [file] [firstpage] [lastpage]"
  exit 0
fi

if [ "X$param1$param2$param3" = "X" ]; then
  echo ""
  echo "Usage: pdftexter [file] [firstpage] [lastpage]"
  exit 0
fi

#echo "converting.."

if [ ! -d ./cache.pdftexter ]; then
  mkdir ./cache.pdftexter
fi

let showedmenu=0
if [ "X$param2$param3" = "X" ]; then
  if [ -e "./$param1.idx" ]; then
    let showedmenu=1
    echo ""
    echo "Main Index:"
    echo ""
    cat ./$param1.idx
    echo ""
    echo ""
    echo ""
    echo ""
    echo ""    
    printf "type your pages: " 
    read param2 param3
    if [ "X$param2$param3" = "X" ]; then
      echo "We can't proceed.. bye!"
      exit 1
    else
      printf .
			if [ "X$param3" = "X" ]; then
				gs -dBATCH -dNOPAUSE -dFirstPage=$param2 -dLastPage=$param2 -sDEVICE=tiffgray -r200x200 -sOutputFile=./cache.pdftexter/.output%d.tiff $param1 > /dev/null
			else
				gs -dBATCH -dNOPAUSE -dFirstPage=$param2 -dLastPage=$param3 -sDEVICE=tiffgray -r200x200 -sOutputFile=./cache.pdftexter/.output%d.tiff $param1 > /dev/null
			fi 
    fi
  else
		if [ -d ./cache.pdftexter ]; then
			rmdir ./cache.pdftexter 2>/dev/null
		fi

    echo ""
    echo "Setup a '$param1.idx' index for your pdf using the format '[Chapter description]... [FirstPage] [LastPage]\\\n', please."
    exit 1
  fi
else 
  printf .
  if [ "X$param3" = "X" ]; then
    gs -dBATCH -dNOPAUSE -dFirstPage=$param2 -dLastPage=$param2 -sDEVICE=tiffgray -r200x200 -sOutputFile=./cache.pdftexter/.output%d.tiff $param1 > /dev/null
  else
    gs -dBATCH -dNOPAUSE -dFirstPage=$param2 -dLastPage=$param3 -sDEVICE=tiffgray -r200x200 -sOutputFile=./cache.pdftexter/.output%d.tiff $param1 > /dev/null
  fi 
fi

if [ -e ./cache.pdftexter/final.txt ]; then
  rm ./cache.pdftexter/final.txt
fi
touch ./cache.pdftexter/final.txt

#echo "processing.."
printf .

let i=0
until (( $i >= 2000 ))
do
  let i+=1
  if [ -e "./cache.pdftexter/.output$i.tiff" ]; then
    tesseract ./cache.pdftexter/.output$i.tiff ./cache.pdftexter/.texter 2>/dev/null
    rm ./cache.pdftexter/.output$i.tiff
    cat ./cache.pdftexter/.texter.txt >> ./cache.pdftexter/final.txt 2>/dev/null
  else
    break
  fi  
done

#echo "loading.."
printf .
sleep 1.5
if [ $showedmenu = 0 ]; then
  printf "\b\b\b"
else
  clear
fi

rm ./cache.pdftexter/.texter.txt

cat ./cache.pdftexter/final.txt | less
rm ./cache.pdftexter/final.txt
if [ -d ./cache.pdftexter ]; then
  rmdir ./cache.pdftexter 2>/dev/null
fi
